// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.DataAccess;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(MyDatabase))]
    [Migration("20240812063903_s")]
    partial class s
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication2.DataAccess.Models.CourceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cources");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.RegistrationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SectionCourseId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionCourseId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.SectionCorseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("courseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("courseId");

                    b.ToTable("SectionCourse");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.SectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Section");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "A2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "A4"
                        },
                        new
                        {
                            Id = 4,
                            Name = "A4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "A5"
                        });
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.SemesterModel", b =>
                {
                    b.Property<int>("SemesterNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterNumber"));

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SemesterNumber");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.StudentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.TeacherModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.RegistrationModel", b =>
                {
                    b.HasOne("WebApplication2.DataAccess.Models.SectionCorseModel", "SectionCourse")
                        .WithMany("RegistredStudents")
                        .HasForeignKey("SectionCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.DataAccess.Models.SemesterModel", "SemesterModel")
                        .WithMany("Registration")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.DataAccess.Models.StudentModel", "Student")
                        .WithMany("RegistredCources")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SectionCourse");

                    b.Navigation("SemesterModel");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.SectionCorseModel", b =>
                {
                    b.HasOne("WebApplication2.DataAccess.Models.SectionModel", "Section")
                        .WithMany("CourseSection")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.DataAccess.Models.TeacherModel", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.DataAccess.Models.CourceModel", "course")
                        .WithMany("SectionCorse")
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("Teacher");

                    b.Navigation("course");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.CourceModel", b =>
                {
                    b.Navigation("SectionCorse");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.SectionCorseModel", b =>
                {
                    b.Navigation("RegistredStudents");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.SectionModel", b =>
                {
                    b.Navigation("CourseSection");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.SemesterModel", b =>
                {
                    b.Navigation("Registration");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.StudentModel", b =>
                {
                    b.Navigation("RegistredCources");
                });

            modelBuilder.Entity("WebApplication2.DataAccess.Models.TeacherModel", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
